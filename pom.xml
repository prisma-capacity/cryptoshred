<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>eu.prismacapacity</groupId>
    <artifactId>basepom-oss</artifactId>
    <version>0.1.6</version>
  </parent>
  <artifactId>cryptoshred</artifactId>
  <version>1.0.3-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>cryptoshredding lib</name>
  <description>TODO</description>
  <url>https://github.com/prisma-capacity</url>
  <organization>
    <name>PRISMA European Capacity Platform GmbH</name>
    <url>http://www.prisma-capacity.eu</url>
  </organization>
  <developers>
    <developer>
      <id>uwe.schaefer</id>
      <name>Uwe Schaefer</name>
      <email>uwe.schaefer@prisma-capacity.eu</email>
    </developer>
  </developers>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <!-- Default value, should be overwritten in actual project -->
  <inceptionYear>2020</inceptionYear>
  <issueManagement>
    <system>github</system>
    <url>https://github.com/prisma-capacity/cryptoshred/issues</url>
  </issueManagement>
  <scm>
    <connection>scm:git:http://github.com/prisma-capacity/cryptoshred.git</connection>
    <developerConnection>scm:git:ssh://github.com/prisma-capacity/cryptoshred.git</developerConnection>
    <url>https://github.com/prisma-capacity/cryptoshred</url>
  </scm>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <maven.version>3.3.9</maven.version>
    <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
    <nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
    <jersey-client.version>1.18.6</jersey-client.version>
    <jackson.version>2.11.1</jackson.version>
    <slf4j.version>1.7.30</slf4j.version>
    <spring-boot.version>2.3.1.RELEASE</spring-boot.version>
  </properties>
  <modules>
    <module>cryptoshred-core</module>
    <module>cryptoshred-cloud-aws</module>
    <module>cryptoshred-spring-micrometer</module>
    <module>cryptoshred-spring-boot-autoconfigure</module>
    <module>cryptoshred-spring-cloud-aws</module>
    <module>cryptoshred-micrometer</module>
  </modules>
  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.6.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.6.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-engine</artifactId>
      <version>1.6.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-commons</artifactId>
      <version>1.6.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>3.4.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>3.4.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.12</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M5</version>
        <configuration>
          <excludedGroups>it</excludedGroups>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M5</version>
        <configuration>
          <groups>it</groups>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.5</version>
        <executions>
          <execution>
            <id>prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <!-- <execution> <id>report</id> <phase>test</phase> <goals> <goal>report</goal> 
            </goals> </execution> -->
        </executions>
        <configuration>
          <excludes>
            <!-- Spring specific classes -->
            <exclude>**/*Configuration.*</exclude>
            <exclude>**/*Application.*</exclude>
            <!-- Exceptions -->
            <exclude>**/*Exception.*</exclude>
            <!-- proto-generated classes -->
            <exclude>**/gen/*</exclude>
            <exclude>**/generated/*</exclude>
            <!-- JDK provided -->
            <exclude>**/OptionalBehavior*</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>com.amashchenko.maven.plugin</groupId>
        <artifactId>gitflow-maven-plugin</artifactId>
        <version>1.14.0</version>
        <configuration>
          <gitFlowConfig>
            <developmentBranch>master</developmentBranch>
          </gitFlowConfig>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <!--This plugin's configuration is used to store Eclipse m2e settings 
          only. It has no influence on the Maven build itself. -->
        <plugin>
          <groupId>org.eclipse.m2e</groupId>
          <artifactId>lifecycle-mapping</artifactId>
          <version>1.0.0</version>
          <configuration>
            <lifecycleMappingMetadata>
              <pluginExecutions>
                <pluginExecution>
                  <pluginExecutionFilter>
                    <groupId> eu.prismacapacity
                    </groupId>
                    <artifactId>
                      unixuid-maven-plugin
                    </artifactId>
                    <versionRange> [1.0.8,)
                    </versionRange>
                    <goals>
                      <goal>unixuid</goal>
                    </goals>
                  </pluginExecutionFilter>
                  <action>
                    <ignore></ignore>
                  </action>
                </pluginExecution>
              </pluginExecutions>
            </lifecycleMappingMetadata>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
